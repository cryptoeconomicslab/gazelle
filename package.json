{
  "name": "root",
  "scripts": {
    "bootstrap": "lerna bootstrap",
    "build": "lerna run build",
    "clean": "lerna run clean",
    "publish": "npm run bootstrap && npm run build && lerna publish",
    "publish:prerelease": "npm run bootstrap && npm run build && lerna publish prerelease",
    "test": "jest",
    "test:all": "npm test && npm run test:contract",
    "test:contract": "lerna run test --scope @cryptoeconomicslab/ovm-ethereum-generator",
    "test:integration": "npm run docker:test",
    "coverage": "jest --coverage",
    "docker:build": "docker-compose build ganache && npm run docker:cp && docker-compose build postgres aggregator test",
    "docker:cp": "npm run docker:cp-env && npm run docker:cp-token",
    "docker:cp-env": "docker cp $(docker create gazelle_ganache):/HOME/ovm-contracts/build/out.config.json ./integration-test/aggregator/src/config.local.json && cp ./integration-test/aggregator/src/config.local.json ./integration-test/e2e-tests/config.local.json",
    "docker:cp-token": "docker cp $(docker create gazelle_ganache):/HOME/ovm-contracts/build/outToken.config.json ./integration-test/aggregator/src/tokenConfig.local.json && cp ./integration-test/aggregator/src/tokenConfig.local.json ./integration-test/e2e-tests/tokenConfig.local.json",
    "docker:start": "docker-compose up -V ganache postgres aggregator",
    "docker:test": "docker-compose up -V -d ganache postgres aggregator && docker-compose up --exit-code-from test test",
    "docker:down": "docker-compose down"
  },
  "devDependencies": {
    "@types/jest": "^24.9.0",
    "@types/node": "^13.1.7",
    "@typescript-eslint/eslint-plugin": "^2.16.0",
    "@typescript-eslint/parser": "^2.16.0",
    "coveralls": "^3.0.9",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-plugin-prettier": "^3.1.2",
    "jest": "^24.9.0",
    "lerna": "^3.20.2",
    "prettier": "^1.19.1",
    "ts-jest": "^24.3.0",
    "ts-node": "^8.6.2",
    "typedoc": "^0.16.6",
    "typescript": "^3.7.4"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testMatch": [
      "**/__tests__/**/?(*.)+(spec|test).(ts|js)"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "<rootDir>/integration-test/"
    ],
    "moduleFileExtensions": [
      "js",
      "ts"
    ],
    "globals": {
      "ts-jest": {
        "tsConfig": "tsconfig.json"
      }
    },
    "collectCoverageFrom": [
      "packages/**/src/**/*.ts?(x)",
      "!**/@types/**"
    ]
  }
}
